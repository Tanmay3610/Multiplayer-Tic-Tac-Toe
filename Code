#Multiplayer Tic Tac Toe Game
board = ['-','-','-','-','-','-','-','-','-']
game_still_going = True
winner = None
current_player = 'X'

def display_board():
    print('\n',board[0],'|',board[1],'|',board[2],'\n',board[3],'|',board[4],'|',board[5],'\n',board[6],'|',board[7],'|',board[8])

def valid(pos):
    if board[pos] == '-': 
        return True 
    else:
        return False
    if pos in [1,2,3,4,5,6,7,8,9]:
        return True
    return False

def handle_turn():
    global current_player
    print(current_player,end = '')
    print('s Turn')
    pos = 0
    try:
        pos = int(input('Enter Posiotion from 1 to 9 '))
    except ValueError:
        print('Invalid Value')
        handle_turn()
    if not valid(pos-1):
        print('Invalid position')
        handle_turn()
    else:
        pos = pos - 1
        board[pos] = current_player

def flip_player():
    global current_player
    if current_player == 'X':
        current_player = 'O'
    else:
        current_player = 'X'

def check_row():
    global winner
    global game_still_going
    row1 = board[0] == board[1] == board[2] != '-'
    row2 = board[3] == board[4] == board[5] != '-'
    row3 = board[6] == board[7] == board[8] != '-'
    if row1 or row2 or row3:
        game_still_going = False
    if row1:
        winner = board[0]
        return
    if row2:
        winner = board[3]
        return
    if row3:
        winner = board[6]
        return
    return

def check_col():
    global winner
    global game_still_going
    col1 = board[0] == board[3] == board[6] != '-'
    col2 = board[1] == board[4] == board[7] != '-'
    col3 = board[2] == board[5] == board[8] != '-'
    if col1 or col2 or col3:
        game_still_going = False
    if col1:
        winner = board[0]
        return
    if col2:
        winner = board[1]
        return
    if col3:
        winner = board[2]
        return
    return

def check_diagonal():
    global winner
    global game_still_going
    d1 = board[0] == board[4] == board[8] != '-'
    d2 = board[2] == board[4] == board[6] != '-'
    if d1 or d2:
        game_still_going = False
    if d1:
        winner = board[0]
        return
    if d2:
        winner = board[2]
        return
    return

def check_tie():
    global game_still_going
    if '-' not in board:
        game_still_going = False

def who_won():
    check_row()
    check_col()
    check_diagonal()
    check_tie()
    
def play_game():
    display_board()
    
    while game_still_going:
        handle_turn()
        display_board()
        
        flip_player()
        
        who_won()    
    
    if winner == 'X' or winner == 'O':
        print('Winner is ',winner)
    else:
        print('Tie')
play_game()
